name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest ./course-swap-app
          docker push ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest ./course-swap-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest

      - name: Set up Docker secrets on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ${{ secrets.APP_PASSWORD }} | docker secret create app_password -
            echo ${{ secrets.MONGO_URI }} | docker secret create mongo_uri -
            echo ${{ secrets.INIT_REFRESH_TOKEN }} | docker secret create init_refresh_token -
            echo ${{ secrets.CLIENT_ID }} | docker secret create client_id -
            echo ${{ secrets.CLIENT_SECRET }} | docker secret create client_secret -
            echo ${{ secrets.REDIRECT_URI }} | docker secret create redirect_uri -
            echo ${{ secrets.FIREBASE_SERVICE_ACCOUNT }} | docker secret create firebase_service_account -
            echo ${{ secrets.BACKEND_ENV }} | docker secret create backend_env -

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest
            docker service update --force course-swap-app
            docker service update --force course-swap-backend
            docker run -d -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest
            docker run -d -p 5000:5000 \
              --env-file /run/secrets/backend_env \
              ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest
