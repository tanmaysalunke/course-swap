name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest ./course-swap-app
          docker push ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest ./course-swap-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest

      - name: Set up Docker secrets on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            # Disable strict host key checking
            mkdir -p ~/.ssh
            echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

            # Create backend_env file
            echo "APP_PASSWORD=${{ secrets.APP_PASSWORD }}" > backend_env
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> backend_env
            echo "INIT_REFRESH_TOKEN=${{ secrets.INIT_REFRESH_TOKEN }}" >> backend_env
            echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> backend_env
            echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> backend_env
            echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> backend_env
            echo "FIREBASE_SERVICE_ACCOUNT=$(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' | base64 --decode)" >> backend_env

            # Transfer backend_env to EC2
            scp -o StrictHostKeyChecking=no backend_env ubuntu@${{ secrets.HOST }}:/home/ubuntu/backend_env

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            # Pull latest images
            docker pull ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest

            # Stop existing containers
            docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest | xargs -r docker stop
            docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest | xargs -r docker stop
              
            # Remove existing containers
            docker ps -a -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest | xargs -r docker rm
            docker ps -a -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest | xargs -r docker rm

            # Run the frontend container
            docker run -d -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest

            # Run the backend container with environment file
            docker run -d -p 5000:5000 \
              --env-file /home/ubuntu/backend_env \
              ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest
