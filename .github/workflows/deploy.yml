name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t tanmaysalunke/myapp-frontend:${{ github.sha }} ./course-swap-app
          docker build -t tanmaysalunke/myapp-backend:${{ github.sha }} ./course-swap-backend
          docker push tanmaysalunke/myapp-frontend:${{ github.sha }}
          docker push tanmaysalunke/myapp-backend:${{ github.sha }}

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "/var/www/CourseSwapApp/"

      - name: Copy frontend/Dockerfile to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "course-swap-app/Dockerfile"
          target: "/var/www/CourseSwapApp/course-swap-app/"

      - name: Copy backend package files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "course-swap-backend/package*.json"
          target: "/var/www/CourseSwapApp/course-swap-backend/"

      - name: Copy frontend package files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "course-swap-app/package*.json"
          target: "/var/www/CourseSwapApp/course-swap-app/"

      - name: Copy backend/Dockerfile to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "course-swap-backend/Dockerfile"
          target: "/var/www/CourseSwapApp/course-swap-backend/"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p /var/www/CourseSwapApp/course-swap-app
            mkdir -p /var/www/CourseSwapApp/course-swap-backend

            echo "Creating .env files and setting up Docker containers."
            # Create .env for frontend
            echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" > /var/www/CourseSwapApp/course-swap-app/.env
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> /var/www/CourseSwapApp/course-swap-app/.env
            echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> /var/www/CourseSwapApp/course-swap-app/.env
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> /var/www/CourseSwapApp/course-swap-app/.env
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> /var/www/CourseSwapApp/course-swap-app/.env
            echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> /var/www/CourseSwapApp/course-swap-app/.env
            echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> /var/www/CourseSwapApp/course-swap-app/.env

            # Create .env for backend
            echo "APP_PASSWORD=${{ secrets.APP_PASSWORD }}" > /var/www/CourseSwapApp/course-swap-backend/.env
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> /var/www/CourseSwapApp/course-swap-backend/.env
            echo "INIT_REFRESH_TOKEN=${{ secrets.INIT_REFRESH_TOKEN }}" >> /var/www/CourseSwapApp/course-swap-backend/.env
            echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> /var/www/CourseSwapApp/course-swap-backend/.env
            echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> /var/www/CourseSwapApp/course-swap-backend/.env
            echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> /var/www/CourseSwapApp/course-swap-backend/.env

            # Pull Docker images and run docker-compose
            docker pull tanmaysalunke/myapp-frontend:${{ github.sha }}
            docker pull tanmaysalunke/myapp-backend:${{ github.sha }}
            docker-compose -f /var/www/CourseSwapApp/docker-compose.yml up -d

            # Debug: Check directory and files
            ls -al /var/www/CourseSwapApp
