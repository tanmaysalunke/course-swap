name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest ./course-swap-app
          docker push ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest ./course-swap-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest

      # - name: Set up Docker secrets on EC2
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ubuntu
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       set -e
      #       # Disable strict host key checking
      #       mkdir -p ~/.ssh
      #       echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      #       # Create backend_env file
      #       echo "APP_PASSWORD=${{ secrets.APP_PASSWORD }}" > backend_env
      #       echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> backend_env
      #       echo "INIT_REFRESH_TOKEN=${{ secrets.INIT_REFRESH_TOKEN }}" >> backend_env
      #       echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> backend_env
      #       echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> backend_env
      #       echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> backend_env
      #       echo -n "FIREBASE_SERVICE_ACCOUNT=" >> backend_env
      #       echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 -d >> backend_env

      #       # Transfer backend_env to EC2
      #       scp -o StrictHostKeyChecking=no backend_env ubuntu@${{ secrets.HOST }}:/home/ubuntu/backend_env
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |

            # Log in to Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Pull latest images
            docker pull ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest

            # Stop and remove old image
            docker stop course-swap-backend || true
            docker rm course-swap-backend || true

            # Run new Backend Image
            docker run -d -p 5000:5000 \
            -e MONGO_URI='${{ secrets.MONGO_URI }}' \
            -e APP_PASSWORD='${{ secrets.APP_PASSWORD }}' \
            -e INIT_REFRESH_TOKEN='${{ secrets.INIT_REFRESH_TOKEN }}' \
            -e CLIENT_ID='${{ secrets.CLIENT_ID }}' \
            -e CLIENT_SECRET='${{ secrets.CLIENT_SECRET }}' \
            -e REDIRECT_URI='${{ secrets.REDIRECT_URI }}' \
            -e FIREBASE_SERVICE_ACCOUNT='${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' \
            ${{ secrets.DOCKER_USERNAME }}/course-swap-backend:latest

            # Stop and remove old Frontend image
            docker stop course-swap-app || true
            docker rm course-swap-app || true

            # Run new image
            docker run -d --name course-swap-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/course-swap-app:latest
