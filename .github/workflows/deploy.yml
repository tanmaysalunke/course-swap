name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose build --no-cache
          docker-compose push
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          INIT_REFRESH_TOKEN: ${{ secrets.INIT_REFRESH_TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Docker network
        run: docker network create my-network || true

      - name: Deploy with SSH (Debug Enabled)
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
            docker stop frontend backend || true
            docker rm frontend backend || true
            docker run -d --name frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/frontend:latest


            docker run -d --name backend -p 5001:5000 \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              -e APP_PASSWORD="${{ secrets.APP_PASSWORD }}" \
              -e FIREBASE_SERVICE_ACCOUNT="$(echo ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }} | base64 --decode)" \
              -e INIT_REFRESH_TOKEN="${{ secrets.INIT_REFRESH_TOKEN }}" \
              -e CLIENT_ID="${{ secrets.CLIENT_ID }}" \
              -e CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}" \
              -e REDIRECT_URI="${{ secrets.REDIRECT_URI }}" \
              ${{ secrets.DOCKER_USERNAME }}/backend:latest
          debug: true
